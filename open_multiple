#!/usr/bin/env python3

import xarray as xr
import numpy as np
import os

# list all .nc files in directory
all_files = os.listdir()
files = []
for file in all_files:
    if file.endswith('.nc'):
        files.append(file)

files.sort() # sort files so they're in sequential order (1981-2023)

# specify bounding box
min_lon = 25
min_lat = -15
max_lon = 50 
max_lat = 10 

last_index = len(files) - 1

precip = np.empty([0,500,500])
for k in range(len(files)):
    ds = xr.open_dataset(file)
    cropped_ds = ds.sel(latitude=slice(min_lat,max_lat), longitude=slice(min_lon,max_lon))
    prec_array = np.squeeze(cropped_ds.to_array())
    if k < last_index:
        precip = np.concatenate([precip,prec_array],axis=0)
    else: # handle 2023 differently since this file only contains first 6 months (Jan-June)
        blank_after_jul1 = np.empty([184,500,500]) # initialize empty array for July-Dec
        blank_after_jul1[:] = np.nan # fill with NA's
        prec_2023 = np.concatenate([prec_array,blank_after_jul1],axis=0) # create 2023 file of length 365 days
        precip = np.concatenate([precip,prec_2023],axis=0) # add to main array
        
precip = np.where(precip==-9999,np.nan,precip) # since NA's are filled with -9999, change to NA (using np.nan call)

precip = precip.astype('float32') # store as float32 instead of float 64 - half the size

np.save('precip',precip)
